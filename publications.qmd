---
title: "publications"
---

```{r}
#| output: asis
#| code-fold: true

# Format a publication's author list
format_authors <- function(authors) {
  # Split authors' names (First MI Last or First Last)
  authors_split <- stringr::str_split(authors, " ")
  # Format as Last, FI. or Last, FI.MI.
  # Two-word last names indicated by underscore, must be post-processed
  sub2 <- function(x, pattern, replacement) sub(pattern, replacement, x)
  authors_formatted <- purrr::map_chr(
    authors_split,
    function(parts) {
      if (length(parts) == 3) {
        sprintf("%s, %s.%s.", 
                parts[3], 
                substr(parts[1], 1, 1), 
                substr(parts[2], 1, 1))
      } else {
        sprintf("%s, %s.", 
                parts[2], 
                substr(parts[1], 1, 1))
      }
    }
  ) |>
    sub2("_", " ")
  # Shorten long author lists
  if (length(authors_formatted) > 7) {
    authors_short <- c(authors_formatted[1:5], 
                       "...", 
                       authors_formatted[length(authors_formatted)])
  } else {
    authors_short <- authors_formatted
  }
  # Make my name bold66
  authors_short[authors_short == "Van Wert, J.C."] <- "<strong>Van Wert, J.C.</strong>"
  # Concatenate
  paste(authors_short, collapse = ", ")
}

# # Find path to PDF file
# find_pdf <- function(authors, year, title) {
#   if (year == "In press") {
#     return(NA)
#   }
#   lead_author <- stringr::str_extract(authors[1], "[^ ]+$")
#   title_short <- title |>
#     stringr::str_replace_all("[^a-zA-Z \\-]", "") |>
#     substr(1, 30)
#   pdf_pattern <- glue::glue("{lead_author}.*- {year} - {title_short}")
#   dir(here::here("assets", "papers"), 
#       pattern = pdf_pattern,
#       ignore.case = TRUE) |>
#     (\(pdf) file.path("docs", "papers", pdf))()
# }
# create_pdf_link <- function(pdf) {
#   ifelse(is.na(pdf), 
#          "", 
#          glue::glue(" <a href=\"{pdf}\" target=\"_blank\">PDF</a>"))



# Read bib file
pubs <- bib2df::bib2df("docs/papers/citations.bib") |>
    dplyr::mutate(AUTHOR = gsub("Van Wert", "Van_Wert", AUTHOR)) |>
  # Retain relevant fields and format author list
  dplyr::transmute(
    authors = purrr::map_chr(AUTHOR, format_authors),
    title = TITLE,
    journal = JOURNAL,
    year = ifelse(YEAR == 9999, "In press", YEAR)
  ) |>
  # Format in HTML. 
  dplyr::mutate(
    pub_html = glue::glue("<li>{authors} ({year}). {title}. <em>{journal}</em>")
  ) |>
  dplyr::pull(pub_html)
# Reverse ordered list
c(
  "<ol reversed>",
  pubs,
  "</ol>"
) |>
  cat()
```

The publication list above is modified code from [Max Czapanskiy](https://flukeandfeather.com/).
